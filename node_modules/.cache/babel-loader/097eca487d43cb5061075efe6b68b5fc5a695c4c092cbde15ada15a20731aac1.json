{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"iblock\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"iblock_title\"\n}, \"Инфоблок: Поиск ID по символьному коду (PHP)\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Реализована простейшая функция для поиска ID инфоблока, по его символьному коду (по средствам PHP кода).\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"code\"\n};\nconst _hoisted_5 = {\n  class: \"code_count\"\n};\nconst _hoisted_6 = {\n  class: \"iblock\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"iblock_title\"\n}, \"Инфоблок: Создание инфоблока (PHP)\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Реализована простейшая функция для создания инфоблока (по средствам PHP кода).\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"code\"\n};\nconst _hoisted_10 = {\n  class: \"code_count\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createStaticVNode(\"<p>Разберем, как это дело работает.</p><p>Функция &quot;<b>AddIBlock()</b>&quot; не требует никаких входящих параметров (<i>этот момент можно менять на свое усмотрение</i>). Результатом ее работы будет создание инфоблока &quot;<b>Документы</b>&quot; в типе инфоблока &quot;<b>Универсальные списки</b>&quot;.</p><p>Определены код типа инфоблока &quot;Универсальные списки&quot; и код создаваемого инфоблока &quot;Документы&quot; (<i><b>$IBType</b> и <b>$IBCode</b></i>).</p><p>Проверяем наличие уже созданного инфоблока &quot;Документы&quot; (<i><u>если есть - прерываем процесс</u></i>).</p><p>Определяем массив, содержащий перечень параметров создаваемого инфоблока (<i><b>$IBCONFIG_Document</b></i>). На основе класса CIBlock создаем новый инфоблок, фиксируем его id (<i><b>$NEWID</b></i>).</p><p>Добавляем свойства инфоблока: &quot;<b>Код</b>&quot;, &quot;<b>Описание</b>&quot; и &quot;<b>Ссылка на оригинал</b>&quot; (<i>на основе массива <b>$IBFIELDS_Document</b></i>). Результатом операции создания свойств будет их идентификатор (<i>фиксируем его в <b>$propId</b></i>).</p><p>Если операция прошла успешно - функция вернет строковое &quot;<b>done</b>&quot;, в противном случае - &quot;<b>error</b>&quot;.</p><br><p><b>Важный момент!</b><br> Для пользовательских типов свойств нужно указывать еще и USER_TYPE. <div class=\\\"code\\\"><table><tr><td class=\\\"code_count\\\">1</td><td>&quot;PROPERTY_TYPE&quot;=&gt; &quot;E&quot;, &quot;USER_TYPE&quot;=&gt; &quot;EList&quot; //Привязка к элементам в виде списка</td></tr></table></div><ul><li></li><br><li><b>Дата/Время:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;DateTime&quot; </li><br><li><b>Привязка к элементам по XML_ID:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;ElementXmlID&quot; </li><br><li><b>Привязка к файлу на сервере:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;FileMan&quot; </li><br><li><b>HTML/текст:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;HTML&quot; </li><br><li><b>Привязка к элементам с автозаполнением:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;E&quot;, &quot;USER_TYPE&quot;=&gt; &quot;EAutocomplete&quot; </li><br><li><b>Привязка к товарам SKU:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;E&quot;, &quot;USER_TYPE&quot;=&gt; &quot;SKU&quot; </li><br><li><b>Счетчик:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;N&quot;, &quot;USER_TYPE&quot;=&gt; &quot;Sequence&quot; </li><br><li><b>Привязка к картам Google Maps:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;map_google&quot; </li><br><li><b>Привязка к Яндекс.Карте:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;map_yandex&quot; </li><br><li><b>Видео:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;video&quot; </li><br><li><b>Привязка к теме форума:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;TopicID&quot; </li><br><li><b>Привязка к пользователю:</b> &quot;PROPERTY_TYPE&quot;=&gt; &quot;S&quot;, &quot;USER_TYPE&quot;=&gt; &quot;UserID&quot; </li></ul></p>\", 9);\nconst _hoisted_20 = {\n  class: \"iblock\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"iblock_title\"\n}, \"Пользователи: Поиск ID группы по символьному коду (PHP)\", -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Реализована простейшая функция для поиска ID инфоблока, по его символьному коду (по средствам PHP кода).\", -1 /* HOISTED */);\nconst _hoisted_23 = {\n  class: \"code\"\n};\nconst _hoisted_24 = {\n  class: \"code_count\"\n};\nexport function render(_ctx, _cache) {\n  const _component_PagetitleComponent = _resolveComponent(\"PagetitleComponent\");\n  const _component_NavigatorComponent = _resolveComponent(\"NavigatorComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_PagetitleComponent, {\n    titleName: 'Заголовок'\n  }), _createElementVNode(\"main\", null, [_createVNode(_component_NavigatorComponent, {\n    navigatorsList: _ctx.AGDATA.navigator\n  }, null, 8 /* PROPS */, [\"navigatorsList\"]), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.exampCode[1][0].code, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", _hoisted_5, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])], 512 /* NEED_PATCH */), [[_vShow, _ctx.$route.params.id == 1]]), _withDirectives(_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.exampCode[2][0].code, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", _hoisted_10, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])]), _hoisted_11], 512 /* NEED_PATCH */), [[_vShow, _ctx.$route.params.id == 2]]), _withDirectives(_createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _hoisted_22, _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.exampCode[3][0].code, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", _hoisted_24, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])], 512 /* NEED_PATCH */), [[_vShow, _ctx.$route.params.id == 3]]), _createCommentVNode(\" Bitrix: памятка по типам свойств инфоблока\\nДля пользовательских типов свойств нужно указывать еще и USER_TYPE.\\n\\nПривязка к элементам в виде списка:\\nPROPERTY_TYPE => 'E' \\nUSER_TYPE => 'EList' \\n\\nДата/Время:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'DateTime' \\n\\nПривязка к элементам по XML_ID:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'ElementXmlID' \\n\\nПривязка к файлу на сервере:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'FileMan' \\n\\nHTML/текст:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'HTML' \\n\\nПривязка к элементам с автозаполнением:\\nPROPERTY_TYPE => 'E' \\nUSER_TYPE => 'EAutocomplete' \\n\\nПривязка к товарам SKU:\\nPROPERTY_TYPE => 'E' \\nUSER_TYPE => 'SKU' \\n\\nСчетчик:\\nPROPERTY_TYPE => 'N' \\nUSER_TYPE => 'Sequence' \\n\\nПривязка к картам Google Maps:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'map_google' \\n\\nПривязка к Яндекс.Карте:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'map_yandex' \\n\\nВидео:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'video' \\n\\nПривязка к теме форума:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'TopicID' \\n\\nПривязка к пользователю:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'UserID'\\n\\n\\\"PROPERTY_TYPE\\\" => \\\"S\\\", // Строка \")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createStaticVNode","_createElementBlock","_Fragment","_createVNode","_component_PagetitleComponent","titleName","_component_NavigatorComponent","navigatorsList","_ctx","AGDATA","navigator","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_renderList","exampCode","code","item","index","_hoisted_5","_toDisplayString","$route","params","id","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_createCommentVNode"],"sources":["/home/kup/my_projects/vue/itdata/src/views_learning/LessonsBitrixView/LessonsBitrixView.html"],"sourcesContent":["<PagetitleComponent :titleName=\"'Заголовок'\"/>\n<main>\n    <NavigatorComponent :navigatorsList=\"AGDATA.navigator\" />\n\n    <div v-show=\"$route.params.id == 1\" class=\"iblock\">\n        <h2 class=\"iblock_title\">Инфоблок: Поиск ID по символьному коду (PHP)</h2>\n        <p>Реализована простейшая функция для поиска ID инфоблока, по его символьному коду (по средствам PHP кода).</p>\n        <div class=\"code\">\n            <table>\n                <tr v-for=\"(item, index) in exampCode[1][0].code\">\n                    <td class=\"code_count\">{{index + 1}}</td>\n                    <td>{{item}}</td>\n                </tr>\n            </table>\n        </div>   \n    </div>\n\n    <div v-show=\"$route.params.id == 2\" class=\"iblock\">\n        <h2 class=\"iblock_title\">Инфоблок: Создание инфоблока (PHP)</h2>\n        <p>Реализована простейшая функция для создания инфоблока (по средствам PHP кода).</p>\n        <div class=\"code\">\n            <table>\n                <tr v-for=\"(item, index) in exampCode[2][0].code\">\n                    <td class=\"code_count\">{{index + 1}}</td>\n                    <td>{{item}}</td>\n                </tr>\n            </table>\n        </div>\n        <p>Разберем, как это дело работает.</p>\n        <p>Функция \"<b>AddIBlock()</b>\" не требует никаких входящих параметров (<i>этот момент можно менять на свое усмотрение</i>). Результатом ее работы будет создание инфоблока \"<b>Документы</b>\" в типе инфоблока \"<b>Универсальные списки</b>\".</p>\n        <p>Определены код типа инфоблока \"Универсальные списки\" и код создаваемого инфоблока \"Документы\" (<i><b>$IBType</b> и <b>$IBCode</b></i>).</p>\n        <p>Проверяем наличие уже созданного инфоблока \"Документы\" (<i><u>если есть - прерываем процесс</u></i>).</p>\n        <p>Определяем массив, содержащий перечень параметров создаваемого инфоблока (<i><b>$IBCONFIG_Document</b></i>). На основе класса CIBlock создаем новый инфоблок, фиксируем его id (<i><b>$NEWID</b></i>).</p>\n        <p>Добавляем свойства инфоблока: \"<b>Код</b>\", \"<b>Описание</b>\" и \"<b>Ссылка на оригинал</b>\" (<i>на основе массива <b>$IBFIELDS_Document</b></i>). Результатом операции создания свойств будет их идентификатор (<i>фиксируем его в <b>$propId</b></i>).</p>\n        <p>Если операция прошла успешно - функция вернет строковое \"<b>done</b>\", в противном случае - \"<b>error</b>\".</p>\n        <br>\n        <p>\n            <b>Важный момент!</b>\n            <br>\n            Для пользовательских типов свойств нужно указывать еще и USER_TYPE.\n            <div class=\"code\">\n                <table>\n                    <tr>\n                        <td class=\"code_count\">1</td>\n                        <td>\"PROPERTY_TYPE\"=> \"E\", \"USER_TYPE\"=> \"EList\"  //Привязка к элементам в виде списка</td>\n                    </tr>\n                </table>\n            </div>\n            <ul>\n                <li>\n                    \n                    \n                </li>\n                <br>\n                <li>\n                    <b>Дата/Время:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"DateTime\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к элементам по XML_ID:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"ElementXmlID\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к файлу на сервере:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"FileMan\"\n                </li>\n                <br>\n                <li>\n                    <b>HTML/текст:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"HTML\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к элементам с автозаполнением:</b>\n                    \"PROPERTY_TYPE\"=> \"E\", \"USER_TYPE\"=> \"EAutocomplete\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к товарам SKU:</b>\n                    \"PROPERTY_TYPE\"=> \"E\", \"USER_TYPE\"=> \"SKU\"\n                </li>\n                <br>\n                <li>\n                    <b>Счетчик:</b>\n                    \"PROPERTY_TYPE\"=> \"N\", \"USER_TYPE\"=> \"Sequence\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к картам Google Maps:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"map_google\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к Яндекс.Карте:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"map_yandex\"\n                </li>\n                <br>\n                <li>\n                    <b>Видео:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"video\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к теме форума:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"TopicID\"\n                </li>\n                <br>\n                <li>\n                    <b>Привязка к пользователю:</b>\n                    \"PROPERTY_TYPE\"=> \"S\", \"USER_TYPE\"=> \"UserID\"\n                </li>\n            </ul>\n        </p>\n    </div>\n\n    <div v-show=\"$route.params.id == 3\" class=\"iblock\">\n        <h2 class=\"iblock_title\">Пользователи: Поиск ID группы по символьному коду (PHP)</h2>\n        <p>Реализована простейшая функция для поиска ID инфоблока, по его символьному коду (по средствам PHP кода).</p>\n        <div class=\"code\">\n            <table>\n                <tr v-for=\"(item, index) in exampCode[3][0].code\">\n                    <td class=\"code_count\">{{index + 1}}</td>\n                    <td>{{item}}</td>\n                </tr>\n            </table>\n        </div>   \n    </div>\n\n    \n\n<!-- Bitrix: памятка по типам свойств инфоблока\nДля пользовательских типов свойств нужно указывать еще и USER_TYPE.\n\nПривязка к элементам в виде списка:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'EList' \n\nДата/Время:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'DateTime' \n\nПривязка к элементам по XML_ID:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'ElementXmlID' \n\nПривязка к файлу на сервере:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'FileMan' \n\nHTML/текст:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'HTML' \n\nПривязка к элементам с автозаполнением:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'EAutocomplete' \n\nПривязка к товарам SKU:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'SKU' \n\nСчетчик:\nPROPERTY_TYPE => 'N' \nUSER_TYPE => 'Sequence' \n\nПривязка к картам Google Maps:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'map_google' \n\nПривязка к Яндекс.Карте:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'map_yandex' \n\nВидео:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'video' \n\nПривязка к теме форума:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'TopicID' \n\nПривязка к пользователю:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'UserID'\n\n\"PROPERTY_TYPE\" => \"S\", // Строка -->\n</main>"],"mappings":";;EAIwCA,KAAK,EAAC;AAAQ;gCAC9CC,mBAAA,CAA0E;EAAtED,KAAK,EAAC;AAAc,GAAC,8CAA4C;gCACrEC,mBAAA,CAA+G,WAA5G,0GAAwG;;EACtGD,KAAK,EAAC;AAAM;;EAGDA,KAAK,EAAC;AAAY;;EAOFA,KAAK,EAAC;AAAQ;gCAC9CC,mBAAA,CAAgE;EAA5DD,KAAK,EAAC;AAAc,GAAC,oCAAkC;gCAC3DC,mBAAA,CAAqF,WAAlF,gFAA8E;;EAC5ED,KAAK,EAAC;AAAM;;EAGDA,KAAK,EAAC;AAAY;iCAvB1CE,kBAAA;;EAqHwCF,KAAK,EAAC;AAAQ;iCAC9CC,mBAAA,CAAqF;EAAjFD,KAAK,EAAC;AAAc,GAAC,yDAAuD;iCAChFC,mBAAA,CAA+G,WAA5G,0GAAwG;;EACtGD,KAAK,EAAC;AAAM;;EAGDA,KAAK,EAAC;AAAY;;;;uBA3H1CG,mBAAA,CAAAC,SAAA,SAAAC,YAAA,CAA8CC,6BAAA;IAAzBC,SAAS,EAAE;EAAW,IAC3CN,mBAAA,CA2LO,eA1LHI,YAAA,CAAyDG,6BAAA;IAApCC,cAAc,EAAEC,IAAA,CAAAC,MAAM,CAACC;+DAE5CX,mBAAA,CAWM,OAXNY,UAWM,GAVFC,UAA0E,EAC1EC,UAA+G,EAC/Gd,mBAAA,CAOM,OAPNe,UAOM,GANFf,mBAAA,CAKQ,iB,kBAJJE,mBAAA,CAGKC,SAAA,QAZrBa,WAAA,CAS4CP,IAAA,CAAAQ,SAAS,OAAOC,IAAI,EAThE,CAS4BC,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAGK,aAFDF,mBAAA,CAAyC,MAAzCqB,UAAyC,EAAAC,gBAAA,CAAhBF,KAAK,sBAC9BpB,mBAAA,CAAiB,YAAAsB,gBAAA,CAAXH,IAAI,iB;0EAPbV,IAAA,CAAAc,MAAM,CAACC,MAAM,CAACC,EAAE,O,mBAa7BzB,mBAAA,CAkGM,OAlGN0B,UAkGM,GAjGFC,UAAgE,EAChEC,UAAqF,EACrF5B,mBAAA,CAOM,OAPN6B,UAOM,GANF7B,mBAAA,CAKQ,iB,kBAJJE,mBAAA,CAGKC,SAAA,QAzBrBa,WAAA,CAsB4CP,IAAA,CAAAQ,SAAS,OAAOC,IAAI,EAtBhE,CAsB4BC,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAGK,aAFDF,mBAAA,CAAyC,MAAzC8B,WAAyC,EAAAR,gBAAA,CAAhBF,KAAK,sBAC9BpB,mBAAA,CAAiB,YAAAsB,gBAAA,CAAXH,IAAI,iB;wCAItBY,WAAuC,C,mCAX9BtB,IAAA,CAAAc,MAAM,CAACC,MAAM,CAACC,EAAE,O,mBAoG7BzB,mBAAA,CAWM,OAXNgC,WAWM,GAVFC,WAAqF,EACrFC,WAA+G,EAC/GlC,mBAAA,CAOM,OAPNmC,WAOM,GANFnC,mBAAA,CAKQ,iB,kBAJJE,mBAAA,CAGKC,SAAA,QA7HrBa,WAAA,CA0H4CP,IAAA,CAAAQ,SAAS,OAAOC,IAAI,EA1HhE,CA0H4BC,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAGK,aAFDF,mBAAA,CAAyC,MAAzCoC,WAAyC,EAAAd,gBAAA,CAAhBF,KAAK,sBAC9BpB,mBAAA,CAAiB,YAAAsB,gBAAA,CAAXH,IAAI,iB;0EAPbV,IAAA,CAAAc,MAAM,CAACC,MAAM,CAACC,EAAE,O,GAejCY,mBAAA,6mCAuDqC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}