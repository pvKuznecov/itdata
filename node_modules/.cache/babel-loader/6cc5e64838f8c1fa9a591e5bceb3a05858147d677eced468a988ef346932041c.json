{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"iblock\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<h2 class=\\\"iblock_title\\\">История</h2><p>HTML (англ. HyperText Markup Language ) - это не &quot;язык программирования&quot; в общем его понимании, а &quot;язык/формат разметки гипертекста&quot;. Под словом &quot;гипертекст&quot; подразумевается некая информационная структура, которая позволяет устанавливать смысловые связи между элементами текста на экране компьютера таким образом, чтобы можно было легко осуществлять переходы от одного элемента к другому. Именно &quot;формат разметки&quot;, который используется для того, чтобы сформировать веб-документ из контента разного вида.</p><p>История HTML начилась в 1986 году. Международная организация по стандартизации принимает стандарт SGML, дающий возможность выстраивать системы разметки любых разновидностей текста. Цель создания этого языка заключалась в том, чтобы размеченный текст можно было просматривать и редактировать про помощи разных программ на различных платформах. SGML нельзя назвать готовой системой для разметки текста, поскольку она определяет только правила записи элементов разметки. Технология SGML оказала влияние на множество разработок в IT сфере тех лет, но сам язык не стал сильно распространен.</p><br><h3>Становление HTML</h3><figure class=\\\"iblock_img_mini-right\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Sir_Tim_Berners-Lee_%28cropped%29.jpg/240px-Sir_Tim_Berners-Lee_%28cropped%29.jpg\\\" alt=\\\"Фото: Тим Бернерс Ли\\\"><figcaption><i>Тим Бернерс Ли</i></figcaption></figure><p>В 1991 году британский ученый <b>Тим Бернерс Ли</b> , взяв за основу SGML, разработал технологию передачи гипертекстовой информации через сеть интернет и называет ее HTML, что значит &quot;Hyper Text Markup Language&quot;.</p><p>На первом этапе своего жизненного цикла HTML соответствовал всем особенностям идеологии языка SGML. Позже, в 1993 году разрабатывается новая версия HTML, которая называлась &quot;HTML1.2&quot;. В этой версии использовалось свыше сорока тегов, три тега из которых было не рекомендовано использовать. Три эти тега указывали на физические параметры текстового документа, что противоречит принципам SGML. Данная версия HTML по-прежнему была ориентирована на структурную и логическую разметку документа, хотя некоторые теги все же показывали, как страница будет выглядеть физически.</p><p>Первые радикальные изменения технология получила в 1995 году, когда разработкой этого языка занялась <b>W3C</b>. Компания представила версию языка 2.0, а позже и 3.0, ставшую настоящим прорывом. Современные версии HTML во многом основаны именно на третьей версии языка.</p><br><p>Основным элементом в этом языке разметки являются теги. Теги представляют собой парную (как правило) конструкцию, которая нужна для того, чтобы задать определенные свойства тексту либо каким-то другим информационным данным, находящимся внутри этой конструкции. К примеру, если в тексте мы вставим следующую конструкцию — [b]Я учу HTML [/b], то надпись «Я учу HTML» будет выделена жирным шрифтом. А если мы напишем текст, окружив его конструкцией [font color=&quot;red&quot;]...[/font], то получим текст красного цвета.</p><br><h3>Версии языка</h3><p>Версия HTML1.0 была предельно простой — кроме тегов для записи гипертекстовых переходов, предусматривалось лишь несколько тегов для логической разметки текста и тег <b><i>&lt;IMG&gt;</i></b> для записи ссылок на файлы с изображениями. Официальной спецификации HTML1.0 как таковой - не существует.</p><p>До 1995 года существовало множество неофициальных стандартов HTML. Чтобы стандартная версия отличалась от них, ей сразу присвоили второй номер.</p><p>Эволюция графических средств вывода информации привела к появлению в последующих версиях HTML многочисленных тегов, позволяющих управлять видом элемента на экране. Описанием стандартов HTML (начиная с версии 2.0 1994 года) стала заниматься организация <b>W3C</b> (<i>World Wide Web Consortium — консорциум Всемирной паутины</i>). В 1995 году (а именно 22 сентября) HTML2.0 был одобрен как стандарт языка.</p><figure class=\\\"iblock_img_mini-left\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/W3C®_Icon.svg/1920px-W3C®_Icon.svg.png\\\" alt=\\\"Официальный логотип World Wide Web Consortium\\\"><figcaption><i>World Wide Web Consortium</i></figcaption></figure><p>Консорциум вводит в HTML3.0 поддержку иерархических стилевых спецификаций <b>CSS</b> (<i>Cascading Style Sheets — каскадные таблицы стилей</i>) в 1995 году. CSS становится неким решением противоречий между идеологией структурной разметки и потребностями разработчиков в гибких и обширных возможностях визуального представления элементов. Язык CSS имеет свой собственный синтаксис, позволяющий задавать визуальные параметры представления элементов на экране. Таким образом, CSS берет на себя задачу объяснить браузеру, как отображать элементы на экран, и позволяет тем самым отделить структурную разметку документа (<i>в HTML</i>) от описаний визуальных свойств объектов (<i>в CSS</i>).</p><p>Официально версия HTML3.1 - никогда не выходило, а следующей версией стандарта стала сразу HTML3.2 (<i>14 января 1997</i>). Многие нововведения версии 3.0 в ней были опущены, однако, добавлено много возможностей, таких как «обтекание» изображений текстом, создание таблиц, отображение сложных математических формул, нестандартные элементы, поддерживаемые браузерами «Netscape» и «Mosaic».</p><p>В 1999 году W3C опубликовали спецификации версии HTML4.0 (<i>18 декабря 1997</i>). Они содержали много элементов, специфичных для отдельных браузеров. По старым стандартам провели работу: многие элементы были отмечены как устаревшие и нерекомендованные. В частности, элемент FONT, используемый для изменения свойств шрифта, был помечен как устаревший (<i>вместо него рекомендуется использовать таблицы стилей CSS</i>). Затем был опубликован стандарт HTML4.01 (<i>24 декабря 1999</i>).</p><br><p>Зачатки HTML5 появились в сети 20 ноября 2007 года. Параллельно велась работа по дальнейшему развитию HTML под названием <b>XHTML</b> (<i>Extensible Hypertext Markup Language — «расширяемый язык разметки гипертекста»</i>). XHTML по своим возможностям сопоставим с HTML, однако предъявляет более строгие требования к синтаксису.</p><p>ХHTML создан для хранения структурированной информации. Названия тегам задает сам разработчик. Теги могут содержать атрибуты. Имена атрибутов набор их значений также задаются разработчиком. Язык ХHTML является универсальным средством для создания структур данных, которые можно использовать для самых разных задач, в том числе, хранить в ХML-файле настроенные данные для компьютерной программы или использовать для создания гипертекстовой страницы. Помимо всего прочего - на базе ХML можно строить другие языки разметки. Вариант XHTML1.0 был одобрен в качестве рекомендации Консорциума всемирной паутины 26 января 2000 года.</p><p>Спецификация XHTML 2.0 разрывает совместимость со старыми версиями HTML и XHTML. Группой <b>WHATWG</b> (<i>Web Hypertext Application Technology Working Group</i>) разрабатывалась спецификация Web Applications 1.0, часто неофициально называемая HTML5, которая расширяет HTML для лучшего представления семантики различных типичных страниц, не вписывающихся в модель XHTML2. На уровне первой версии языка ХHTML не дает практически никаких преимуществ по сравнению с последней версией языка HTML, но синтаксические требования в языке HTML существенно выше, что, с одной стороны, усложняет использование этого языка, а с другой — дисциплинирует разработчиков, которые привыкли относиться к гипертекстовому коду небрежно, считая, что браузер додумает за них (что он и делает, исправляя ошибки в HTML — коде по своему усмотрению).</p><br><figure class=\\\"iblock_img_mini-left\\\"><img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/HTML5_logo_and_wordmark.svg/1280px-HTML5_logo_and_wordmark.svg.png\\\" alt=\\\"Официальный логотип HTML5\\\"><figcaption><i>Официальный логотип HTML5</i></figcaption></figure><p>Стандарт HTML5 хоть и был завершён (рекомендованная версия к использованию) только в 2014 году, но браузерами уже с 2013 года осуществлялась его поддержка. Глобальной целью разработки HTML5 является улучшение уровня поддержки мультимедиа-технологий с одновременным сохранением обратной совместимости, удобочитаемости кода для человека и простоты анализа.</p><p>Cтандарты HTML 4.01, XHTML 1.0 и XHTML 1.1 очень долго использовались на просторах глобальной сети. Веб-страницы на практике оказывались свёрстаны с использованием смеси особенностей, представленных различными спецификациями, включая спецификации программных продуктов, например веб-браузеров, а также сложившихся общеупотребительных приёмов. HTML5 был создан как единый язык разметки, который мог бы сочетать синтаксические нормы HTML и XHTML. Он расширяет, улучшает и рационализирует разметку документов, а также добавляет единый API для сложных веб-приложений.</p><p>В HTML5 реализовано множество новых синтаксических особенностей. Например, элементы <b>video</b>, <b>audio</b> и <b>canvas</b>, а также возможность использования SVG и математических формул. Эти новшества разработаны для упрощения создания и управления графическими и мультимедийными объектами в сети без необходимости использования сторонних API и плагинов. Другие новые элементы, такие как <b>section</b>, <b>article</b>, <b>header</b> и <b>nav</b>, разработаны для того, чтобы обогащать семантическое содержимое документа (страницы). Новые атрибуты были введены с той же целью, хотя ряд элементов и атрибутов был удалён. Некоторые элементы, например <b>a</b>, <b>menu</b> и <b>cite</b>, были изменены, переопределены или стандартизированы. API и DOM стали основными частями спецификации HTML5. HTML5 также определяет некоторые особенности обработки ошибок вёрстки, поэтому синтаксические ошибки должны рассматриваться одинаково всеми совместимыми браузерами.</p>\", 29);\nconst _hoisted_31 = [_hoisted_2];\nconst _hoisted_32 = {\n  class: \"iblock\"\n};\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"iblock_title\"\n}, \"Глава 1: Рабочее место\", -1 /* HOISTED */);\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Структура HTML-документа\", -1 /* HOISTED */);\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createTextVNode(\"HTML - это теговый язык разметки документов. Любой документ на языке HTML представляет собой набор элементов, каждый из которых обрамлен в специальную конструкцию - теги. Элементы могут как содержать некий контент внутри себя, так и не иметь ничего внутри вовсе. В этом случае обычно не указывается закрывающий тег (например, тег переноса строки br — одиночный и закрывать его не нужно) . Кроме того, элементы могут иметь атрибуты, определяющие какие-либо их свойства (\"), /*#__PURE__*/_createElementVNode(\"i\", null, [/*#__PURE__*/_createTextVNode(\"например, атрибут \"), /*#__PURE__*/_createElementVNode(\"b\", null, \"href=\\\"\\\"\"), /*#__PURE__*/_createTextVNode(\" у ссылки\")]), /*#__PURE__*/_createTextVNode(\"). Атрибуты указываются в открывающем теге. Вот примеры фрагментов HTML-документа:\")], -1 /* HOISTED */);\nconst _hoisted_38 = {\n  class: \"code\"\n};\nconst _hoisted_39 = {\n  class: \"code_count\"\n};\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Итогом исполнеия кода, указанного выше, будет вывод двух строк:\", -1 /* HOISTED */);\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"code_compil\"\n}, [/*#__PURE__*/_createElementVNode(\"strong\", null, \"Текст между двумя тегами — открывающим и закрывающим.\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"http://www.example.com\"\n}, \"Здесь элемент содержит атрибут href, то есть гиперссылку.\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_PagetitleComponent = _resolveComponent(\"PagetitleComponent\");\n  const _component_NavigatorComponent = _resolveComponent(\"NavigatorComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_PagetitleComponent, {\n    titleName: 'Заголовок'\n  }), _createElementVNode(\"main\", null, [_createVNode(_component_NavigatorComponent, {\n    navigatorsList: _ctx.AGDATA.navigator\n  }, null, 8 /* PROPS */, [\"navigatorsList\"]), _createCommentVNode(\" Идентификатор урока: {{ $route.params.id }} \"), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [..._hoisted_31], 512 /* NEED_PATCH */), [[_vShow, _ctx.$route.params.id == 0]]), _withDirectives(_createElementVNode(\"div\", _hoisted_32, [_hoisted_33, _createTextVNode(\" Обсудим минимум, который необходим для начала работы с HTML. \"), _hoisted_34, _hoisted_35, _hoisted_36, _hoisted_37, _createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.exampCode[1][0].code, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", _hoisted_39, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])]), _hoisted_40, _hoisted_41], 512 /* NEED_PATCH */), [[_vShow, _ctx.$route.params.id == 1]])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createStaticVNode","_hoisted_2","_createElementVNode","_createTextVNode","href","_createElementBlock","_Fragment","_createVNode","_component_PagetitleComponent","titleName","_component_NavigatorComponent","navigatorsList","_ctx","AGDATA","navigator","_createCommentVNode","_hoisted_1","_hoisted_31","$route","params","id","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_renderList","exampCode","code","item","index","_hoisted_39","_toDisplayString","_hoisted_40","_hoisted_41"],"sources":["/home/kup/my_projects/vue/itdata/src/views_learning/LessonsHTMLView/LessonsHTMLView.html"],"sourcesContent":["<PagetitleComponent :titleName=\"'Заголовок'\"/>\n<main>\n    <NavigatorComponent :navigatorsList=\"AGDATA.navigator\" />\n    <!-- Идентификатор урока: {{ $route.params.id }} -->\n\n    <div v-show=\"$route.params.id == 0\" class=\"iblock\">\n        <h2 class=\"iblock_title\">История</h2>\n        <p>HTML (англ. HyperText Markup Language ) - это не \"язык программирования\" в общем его понимании, а \"язык/формат разметки гипертекста\". Под словом \"гипертекст\" подразумевается некая информационная структура, которая позволяет устанавливать смысловые связи между элементами текста на экране компьютера таким образом, чтобы можно было легко осуществлять переходы от одного элемента к другому. Именно \"формат разметки\", который используется для того, чтобы сформировать веб-документ из контента разного вида.</p>\n        <p>История HTML начилась в 1986 году. Международная организация по стандартизации принимает стандарт SGML, дающий возможность выстраивать системы разметки любых разновидностей текста. Цель создания этого языка заключалась в том, чтобы размеченный текст можно было просматривать и редактировать про помощи разных программ на различных платформах. SGML нельзя назвать готовой системой для разметки текста, поскольку она определяет только правила записи элементов разметки. Технология SGML оказала влияние на множество разработок в IT сфере тех лет, но сам язык не стал сильно распространен.</p>\n        <br>\n        <h3>Становление HTML</h3>\n        <figure class=\"iblock_img_mini-right\">\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Sir_Tim_Berners-Lee_%28cropped%29.jpg/240px-Sir_Tim_Berners-Lee_%28cropped%29.jpg\" alt=\"Фото: Тим Бернерс Ли\"/>\n            <figcaption><i>Тим Бернерс Ли</i></figcaption>\n        </figure>\n        <p>В 1991 году британский ученый <b>Тим Бернерс Ли</b> , взяв за основу SGML, разработал технологию передачи гипертекстовой информации через сеть интернет и называет ее HTML, что значит \"Hyper Text Markup Language\".</p>\n        <p>На первом этапе своего жизненного цикла HTML соответствовал всем особенностям идеологии языка SGML. Позже, в 1993 году разрабатывается новая версия HTML, которая называлась \"HTML1.2\". В этой версии использовалось свыше сорока тегов, три тега из которых было не рекомендовано использовать. Три эти тега указывали на физические параметры текстового документа, что противоречит принципам SGML. Данная версия HTML по-прежнему была ориентирована на структурную и логическую разметку документа, хотя некоторые теги все же показывали, как страница будет выглядеть физически.</p>\n        <p>Первые радикальные изменения технология получила в 1995 году, когда разработкой этого языка занялась <b>W3C</b>. Компания представила версию языка 2.0, а позже и 3.0, ставшую настоящим прорывом. Современные версии HTML во многом основаны именно на третьей версии языка.</p>\n        <br>        \n        <p>Основным элементом в этом языке разметки являются теги. Теги представляют собой парную (как правило) конструкцию, которая нужна для того, чтобы задать определенные свойства тексту либо каким-то другим информационным данным, находящимся внутри этой конструкции. К примеру, если в тексте мы вставим следующую конструкцию — [b]Я учу HTML [/b], то надпись «Я учу HTML» будет выделена жирным шрифтом. А если мы напишем текст, окружив его конструкцией [font color=\"red\"]...[/font], то получим текст красного цвета.</p>\n        <br>\n        <h3>Версии языка</h3>\n        <p>Версия HTML1.0 была предельно простой — кроме тегов для записи гипертекстовых переходов, предусматривалось лишь несколько тегов для логической разметки текста и тег <b><i>&lt;IMG&gt;</i></b> для записи ссылок на файлы с изображениями. Официальной спецификации HTML1.0 как таковой - не существует.</p>\n        <p>До 1995 года существовало множество неофициальных стандартов HTML. Чтобы стандартная версия отличалась от них, ей сразу присвоили второй номер.</p>\n        <p>Эволюция графических средств вывода информации привела к появлению в последующих версиях HTML многочисленных тегов, позволяющих управлять видом элемента на экране. Описанием стандартов HTML (начиная с версии 2.0 1994 года) стала заниматься организация <b>W3C</b> (<i>World Wide Web Consortium — консорциум Всемирной паутины</i>). В 1995 году (а именно 22 сентября) HTML2.0 был одобрен как стандарт языка.</p>\n        <figure class=\"iblock_img_mini-left\">\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ed/W3C®_Icon.svg/1920px-W3C®_Icon.svg.png\" alt=\"Официальный логотип World Wide Web Consortium\"/>\n            <figcaption><i>World Wide Web Consortium</i></figcaption>\n        </figure>\n        <p>Консорциум вводит в HTML3.0 поддержку иерархических стилевых спецификаций <b>CSS</b> (<i>Cascading Style Sheets — каскадные таблицы стилей</i>) в 1995 году. CSS становится неким решением противоречий между идеологией структурной разметки и потребностями разработчиков в гибких и обширных возможностях визуального представления элементов. Язык CSS имеет свой собственный синтаксис, позволяющий задавать визуальные параметры представления элементов на экране. Таким образом, CSS берет на себя задачу объяснить браузеру, как отображать элементы на экран, и позволяет тем самым отделить структурную разметку документа (<i>в HTML</i>) от описаний визуальных свойств объектов (<i>в CSS</i>).</p>\n        <p>Официально версия HTML3.1 - никогда не выходило, а следующей версией стандарта стала сразу HTML3.2 (<i>14 января 1997</i>). Многие нововведения версии 3.0 в ней были опущены, однако, добавлено много возможностей, таких как «обтекание» изображений текстом, создание таблиц, отображение сложных математических формул, нестандартные элементы, поддерживаемые браузерами «Netscape» и «Mosaic».</p>\n        <p>В 1999 году W3C опубликовали спецификации версии HTML4.0 (<i>18 декабря 1997</i>). Они содержали много элементов, специфичных для отдельных браузеров. По старым стандартам провели работу: многие элементы были отмечены как устаревшие и нерекомендованные. В частности, элемент FONT, используемый для изменения свойств шрифта, был помечен как устаревший (<i>вместо него рекомендуется использовать таблицы стилей CSS</i>). Затем был опубликован стандарт HTML4.01 (<i>24 декабря 1999</i>).</p>\n        <br>\n        <p>Зачатки HTML5 появились в сети 20 ноября 2007 года. Параллельно велась работа по дальнейшему развитию HTML под названием <b>XHTML</b> (<i>Extensible Hypertext Markup Language — «расширяемый язык разметки гипертекста»</i>). XHTML по своим возможностям сопоставим с HTML, однако предъявляет более строгие требования к синтаксису.</p>\n        <p>ХHTML создан для хранения структурированной информации. Названия тегам задает сам разработчик. Теги могут содержать атрибуты. Имена атрибутов набор их значений также задаются разработчиком. Язык ХHTML является универсальным средством для создания структур данных, которые можно использовать для самых разных задач, в том числе, хранить в ХML-файле настроенные данные для компьютерной программы или использовать для создания гипертекстовой страницы. Помимо всего прочего - на базе ХML можно строить другие языки разметки. Вариант XHTML1.0 был одобрен в качестве рекомендации Консорциума всемирной паутины 26 января 2000 года.</p>\n        <p>Спецификация XHTML 2.0 разрывает совместимость со старыми версиями HTML и XHTML. Группой <b>WHATWG</b> (<i>Web Hypertext Application Technology Working Group</i>) разрабатывалась спецификация Web Applications 1.0, часто неофициально называемая HTML5, которая расширяет HTML для лучшего представления семантики различных типичных страниц, не вписывающихся в модель XHTML2. На уровне первой версии языка ХHTML не дает практически никаких преимуществ по сравнению с последней версией языка HTML, но синтаксические требования в языке HTML существенно выше, что, с одной стороны, усложняет использование этого языка, а с другой — дисциплинирует разработчиков, которые привыкли относиться к гипертекстовому коду небрежно, считая, что браузер додумает за них (что он и делает, исправляя ошибки в HTML — коде по своему усмотрению).</p>\n        <br>\n        <figure class=\"iblock_img_mini-left\">\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/HTML5_logo_and_wordmark.svg/1280px-HTML5_logo_and_wordmark.svg.png\" alt=\"Официальный логотип HTML5\"/>\n            <figcaption><i>Официальный логотип HTML5</i></figcaption>\n        </figure>\n        <p>Стандарт HTML5 хоть и был завершён (рекомендованная версия к использованию) только в 2014 году, но браузерами уже с 2013 года осуществлялась его поддержка. Глобальной целью разработки HTML5 является улучшение уровня поддержки мультимедиа-технологий с одновременным сохранением обратной совместимости, удобочитаемости кода для человека и простоты анализа.</p>\n        <p>Cтандарты HTML 4.01, XHTML 1.0 и XHTML 1.1 очень долго использовались на просторах глобальной сети. Веб-страницы на практике оказывались свёрстаны с использованием смеси особенностей, представленных различными спецификациями, включая спецификации программных продуктов, например веб-браузеров, а также сложившихся общеупотребительных приёмов. HTML5 был создан как единый язык разметки, который мог бы сочетать синтаксические нормы HTML и XHTML. Он расширяет, улучшает и рационализирует разметку документов, а также добавляет единый API для сложных веб-приложений.</p>\n        <p>В HTML5 реализовано множество новых синтаксических особенностей. Например, элементы <b>video</b>, <b>audio</b> и <b>canvas</b>, а также возможность использования SVG и математических формул. Эти новшества разработаны для упрощения создания и управления графическими и мультимедийными объектами в сети без необходимости использования сторонних API и плагинов. Другие новые элементы, такие как <b>section</b>, <b>article</b>, <b>header</b> и <b>nav</b>, разработаны для того, чтобы обогащать семантическое содержимое документа (страницы). Новые атрибуты были введены с той же целью, хотя ряд элементов и атрибутов был удалён. Некоторые элементы, например <b>a</b>, <b>menu</b> и <b>cite</b>, были изменены, переопределены или стандартизированы. API и DOM стали основными частями спецификации HTML5. HTML5 также определяет некоторые особенности обработки ошибок вёрстки, поэтому синтаксические ошибки должны рассматриваться одинаково всеми совместимыми браузерами.</p>\n    </div>\n\n    <div v-show=\"$route.params.id == 1\" class=\"iblock\">\n        <h2 class=\"iblock_title\">Глава 1: Рабочее место</h2>\n        Обсудим минимум, который необходим для начала работы с HTML.\n        <br><br>\n        <h3>Структура HTML-документа</h3>\n        <p>HTML - это теговый язык разметки документов. Любой документ на языке HTML представляет собой набор элементов, каждый из которых обрамлен в специальную конструкцию - теги. Элементы могут как содержать некий контент внутри себя, так и не иметь ничего внутри вовсе. В этом случае обычно не указывается закрывающий тег (например, тег переноса строки br — одиночный и закрывать его не нужно) . Кроме того, элементы могут иметь атрибуты, определяющие какие-либо их свойства (<i>например, атрибут <b>href=\"\"</b> у ссылки</i>). Атрибуты указываются в открывающем теге. Вот примеры фрагментов HTML-документа:</p>\n        <div class=\"code\">\n            <table>\n                <tr v-for=\"(item, index) in exampCode[1][0].code\">\n                    <td class=\"code_count\">{{index + 1}}</td>\n                    <td>{{item}}</td>\n                </tr>\n            </table>\n        </div>\n        <p>Итогом исполнеия кода, указанного выше, будет вывод двух строк:</p>\n        <div class=\"code_compil\">\n            <strong>Текст между двумя тегами — открывающим и закрывающим.</strong>\n            <br><br>\n            <a href=\"http://www.example.com\">Здесь элемент содержит атрибут href, то есть гиперссылку.</a>\n        </div>\n    </div>\n</main>\n"],"mappings":";;EAKwCA,KAAK,EAAC;AAAQ;gCALtDC,kBAAA;qBAMQC,UAAqC,C;;EAwCLF,KAAK,EAAC;AAAQ;iCAC9CG,mBAAA,CAAoD;EAAhDH,KAAK,EAAC;AAAc,GAAC,wBAAsB;iCAE/CG,mBAAA,CAAI;iCAAAA,mBAAA,CAAI;iCACRA,mBAAA,CAAiC,YAA7B,0BAAwB;iCAC5BA,mBAAA,CAA8lB,Y,aAnDtmBC,gBAAA,CAmDW,udAAqd,G,aAAAD,mBAAA,CAAgD,Y,aAnDhhBC,gBAAA,CAmDme,oBAAkB,G,aAAAD,mBAAA,CAAc,WAAX,WAAO,G,aAnD/fC,gBAAA,CAmDmgB,WAAS,E,gBAnD5gBA,gBAAA,CAmDghB,oFAAkF,E;;EACrlBJ,KAAK,EAAC;AAAM;;EAGDA,KAAK,EAAC;AAAY;iCAKlCG,mBAAA,CAAsE,WAAnE,iEAA+D;iCAClEA,mBAAA,CAIM;EAJDH,KAAK,EAAC;AAAa,I,aACpBG,mBAAA,CAAsE,gBAA9D,uDAAqD,G,aAC7DA,mBAAA,CAAI,O,aAAAA,mBAAA,CAAI,O,aACRA,mBAAA,CAA8F;EAA3FE,IAAI,EAAC;AAAwB,GAAC,2DAAyD,E;;;;uBAhEtGC,mBAAA,CAAAC,SAAA,SAAAC,YAAA,CAA8CC,6BAAA;IAAzBC,SAAS,EAAE;EAAW,IAC3CP,mBAAA,CAkEO,eAjEHK,YAAA,CAAyDG,6BAAA;IAApCC,cAAc,EAAEC,IAAA,CAAAC,MAAM,CAACC;+CAC5CC,mBAAA,iDAAoD,E,gBAEpDb,mBAAA,CAuCM,OAvCNc,UAuCM,EA5CV,IAAAC,WAAA,2B,SAKiBL,IAAA,CAAAM,MAAM,CAACC,MAAM,CAACC,EAAE,O,mBAyC7BlB,mBAAA,CAoBM,OApBNmB,WAoBM,GAnBFC,WAAoD,EA/C5DnB,gBAAA,CA+C4D,gEAEpD,GAAAoB,WAAI,EAAAC,WAAI,EACRC,WAAiC,EACjCC,WAA8lB,EAC9lBxB,mBAAA,CAOM,OAPNyB,WAOM,GANFzB,mBAAA,CAKQ,iB,kBAJJG,mBAAA,CAGKC,SAAA,QAzDrBsB,WAAA,CAsD4ChB,IAAA,CAAAiB,SAAS,OAAOC,IAAI,EAtDhE,CAsD4BC,IAAI,EAAEC,KAAK;yBAAvB3B,mBAAA,CAGK,aAFDH,mBAAA,CAAyC,MAAzC+B,WAAyC,EAAAC,gBAAA,CAAhBF,KAAK,sBAC9B9B,mBAAA,CAAiB,YAAAgC,gBAAA,CAAXH,IAAI,iB;wCAItBI,WAAsE,EACtEC,WAIM,C,mCAnBGxB,IAAA,CAAAM,MAAM,CAACC,MAAM,CAACC,EAAE,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}