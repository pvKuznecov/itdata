{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"iblock\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"iblock_title\"\n}, \"Создание инфоблока (API; PHP)\", -1);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"В данном уроке предлагается вариант функции, предназначенной для создания инфоблока, по средствам PHP кода.\", -1);\nconst _hoisted_4 = {\n  class: \"code\"\n};\nconst _hoisted_5 = {\n  class: \"code_count\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createStaticVNode(\"<p>Разберем, как это дело работает.</p><p>Функция &quot;<b>AddIBlock()</b>&quot; не требует никаких входящих параметров (<i>этот момент можно менять на свое усмотрение</i>). Результатом ее работы будет создание инфоблока &quot;<b>Документы</b>&quot; в типе инфоблока &quot;<b>Универсальные списки</b>&quot;.</p><p>Определены код типа инфоблока &quot;Универсальные списки&quot; и код создаваемого инфоблока &quot;Документы&quot; (<i><b>$IBType</b> и <b>$IBCode</b></i>).</p><p>Проверяем наличие уже созданного инфоблока &quot;Документы&quot; (<i><u>если есть - прерываем процесс</u></i>).</p><p>Определяем массив, содержащий перечень параметров создаваемого инфоблока (<i><b>$IBCONFIG_Document</b></i>). На основе класса CIBlock создаем новый инфоблок, фиксируем его id (<i><b>$NEWID</b></i>).</p><p>Добавляем свойства инфоблока: &quot;<b>Код</b>&quot;, &quot;<b>Описание</b>&quot; и &quot;<b>Ссылка на оригинал</b>&quot; (<i>на основе массива <b>$IBFIELDS_Document</b></i>). Результатом операции создания свойств будет их идентификатор (<i>фиксируем его в <b>$propId</b></i>).</p><p>Если операция прошла успешно - функция вернет строковое &quot;<b>done</b>&quot;, в противном случае - &quot;<b>error</b>&quot;.</p>\", 7);\nexport function render(_ctx, _cache) {\n  const _component_PagetitleComponent = _resolveComponent(\"PagetitleComponent\");\n  const _component_NavigatorComponent = _resolveComponent(\"NavigatorComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_PagetitleComponent, {\n    titleName: 'Заголовок'\n  }), _createElementVNode(\"main\", null, [_createVNode(_component_NavigatorComponent, {\n    navigatorsList: _ctx.AGDATA.navigator\n  }, null, 8, [\"navigatorsList\"]), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.exampCode[1][0].code, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", _hoisted_5, _toDisplayString(index + 1), 1), _createElementVNode(\"td\", null, _toDisplayString(item), 1)]);\n  }), 256))])]), _hoisted_6], 512), [[_vShow, _ctx.$route.params.id == 0]])])], 64);\n}","map":{"version":3,"names":["class","_createElementVNode","_createStaticVNode","_createElementBlock","_Fragment","_createVNode","_component_PagetitleComponent","titleName","_component_NavigatorComponent","navigatorsList","_ctx","AGDATA","navigator","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_renderList","exampCode","code","item","index","_hoisted_5","_toDisplayString","_hoisted_6","$route","params","id"],"sources":["/home/kup/my_projects/vue/itdata/src/views_learning/LessonsBitrixView/LessonsBitrixView.html"],"sourcesContent":["<PagetitleComponent :titleName=\"'Заголовок'\"/>\n<main>\n    <NavigatorComponent :navigatorsList=\"AGDATA.navigator\" />\n\n    <div v-show=\"$route.params.id == 0\" class=\"iblock\">\n        <h2 class=\"iblock_title\">Создание инфоблока (API; PHP)</h2>\n        <p>В данном уроке предлагается вариант функции, предназначенной для создания инфоблока, по средствам PHP кода.</p>\n        <div class=\"code\">\n            <table>\n                <tr v-for=\"(item, index) in exampCode[1][0].code\">\n                    <td class=\"code_count\">{{index + 1}}</td>\n                    <td>{{item}}</td>\n                </tr>\n            </table>\n        </div>\n        <p>Разберем, как это дело работает.</p>\n        <p>Функция \"<b>AddIBlock()</b>\" не требует никаких входящих параметров (<i>этот момент можно менять на свое усмотрение</i>). Результатом ее работы будет создание инфоблока \"<b>Документы</b>\" в типе инфоблока \"<b>Универсальные списки</b>\".</p>\n        <p>Определены код типа инфоблока \"Универсальные списки\" и код создаваемого инфоблока \"Документы\" (<i><b>$IBType</b> и <b>$IBCode</b></i>).</p>\n        <p>Проверяем наличие уже созданного инфоблока \"Документы\" (<i><u>если есть - прерываем процесс</u></i>).</p>\n        <p>Определяем массив, содержащий перечень параметров создаваемого инфоблока (<i><b>$IBCONFIG_Document</b></i>). На основе класса CIBlock создаем новый инфоблок, фиксируем его id (<i><b>$NEWID</b></i>).</p>\n        <p>Добавляем свойства инфоблока: \"<b>Код</b>\", \"<b>Описание</b>\" и \"<b>Ссылка на оригинал</b>\" (<i>на основе массива <b>$IBFIELDS_Document</b></i>). Результатом операции создания свойств будет их идентификатор (<i>фиксируем его в <b>$propId</b></i>).</p>\n        <p>Если операция прошла успешно - функция вернет строковое \"<b>done</b>\", в противном случае - \"<b>error</b>\".</p>\n    </div>\n\n\n<!-- Bitrix: памятка по типам свойств инфоблока\nДля пользовательских типов свойств нужно указывать еще и USER_TYPE.\n\nПривязка к элементам в виде списка:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'EList' \n\nДата/Время:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'DateTime' \n\nПривязка к элементам по XML_ID:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'ElementXmlID' \n\nПривязка к файлу на сервере:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'FileMan' \n\nHTML/текст:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'HTML' \n\nПривязка к элементам с автозаполнением:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'EAutocomplete' \n\nПривязка к товарам SKU:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'SKU' \n\nСчетчик:\nPROPERTY_TYPE => 'N' \nUSER_TYPE => 'Sequence' \n\nПривязка к картам Google Maps:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'map_google' \n\nПривязка к Яндекс.Карте:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'map_yandex' \n\nВидео:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'video' \n\nПривязка к теме форума:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'TopicID' \n\nПривязка к пользователю:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'UserID'\n\n\"PROPERTY_TYPE\" => \"S\", // Строка -->\n</main>"],"mappings":";;EAIwCA,KAAK,EAAC;AAAQ;gCAC9CC,mBAAA,CAA2D;EAAvDD,KAAK,EAAC;AAAc,GAAC,+BAA6B;gCACtDC,mBAAA,CAAkH,WAA/G,6GAA2G;;EACzGD,KAAK,EAAC;AAAM;;EAGDA,KAAK,EAAC;AAAY;gCAV1CE,kBAAA;;;;uBAAAC,mBAAA,CAAAC,SAAA,SAAAC,YAAA,CAA8CC,6BAAA;IAAzBC,SAAS,EAAE;EAAW,IAC3CN,mBAAA,CAgFO,eA/EHI,YAAA,CAAyDG,6BAAA;IAApCC,cAAc,EAAEC,IAAA,CAAAC,MAAM,CAACC;mDAE5CX,mBAAA,CAkBM,OAlBNY,UAkBM,GAjBFC,UAA2D,EAC3DC,UAAkH,EAClHd,mBAAA,CAOM,OAPNe,UAOM,GANFf,mBAAA,CAKQ,iB,kBAJJE,mBAAA,CAGKC,SAAA,QAZrBa,WAAA,CAS4CP,IAAA,CAAAQ,SAAS,OAAOC,IAAI,EAThE,CAS4BC,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAGK,aAFDF,mBAAA,CAAyC,MAAzCqB,UAAyC,EAAAC,gBAAA,CAAhBF,KAAK,WAC9BpB,mBAAA,CAAiB,YAAAsB,gBAAA,CAAXH,IAAI,M;iBAItBI,UAAuC,C,kBAX9Bd,IAAA,CAAAe,MAAM,CAACC,MAAM,CAACC,EAAE,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}