{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withCtx as _withCtx, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"iblock\\\"><p><b>Фреймворк</b> - это некая программная платформа, определяющая структуру программной системы; ПО, облегчающее разработку и объединяющее различные компоненты большого программного проекта.</p><p> В случае использования фреймворков в процессе разработки, можно сказать, что &quot;используется каркасный подход&quot; построения программ. В таком случае любая конфигурация программы строится из двух частей: <ul><li><b>Постоянная часть</b> — каркас, не меняющийся от конфигурации к конфигурации и несущий в себе гнёзда, в которых размещается вторая, переменная часть;</li><li><b>Сменные модули</b> (или точки расширения).</li></ul> Понятие &quot;фреймворк&quot; отличается от понятия &quot;библиотека&quot; тем, что последнее может быть использована в программном продукте просто как набор подпрограмм, не влияя на архитектуру в целом и не накладывая на неё никаких ограничений. В то время как фреймворк определяет правила архитектуры приложения, определяя на начальном этапе разработки «каркас», который нужно будет расширять и изменять согласно указанным требованиям. Также, в отличие от библиотеки, которая объединяет в себе набор близкой функциональности, — «фреймворк» может содержать в себе большое число разных по тематике библиотек. </p><br><p><b>JavaScript-фреймворки</b> — это фреймворки для приложений, написанные на языке программирования JavaScript. JavaScript-фреймворки отличается от Javascript-библиотек потоком управления. Они являются неотъемлемой частью современной веб-разработки, предоставляя разработчикам проверенные и протестированные инструменты для создания масштабируемых и интерактивных веб-приложений. Многие современные компании используют фреймворки для своих решений, поэтому многие задачи связанные с разработкой клиентской части веб-приложений теперь требуют опыта работы с ними.</p><p> Фреймворки JavaScript имеют ряд преимуществ, которые обеспечивают более эффективную и организованную разработку. <ul><li><b>Ускорение разработки</b> - предоставляются готовые решения для общих задач (маршрутизация, управление состоянием и взаимодействие с сервером), что позволяет разработчику сосредоточиться на над своими индивидуальными задачами, не тратя время на реализацию базовых функций.</li><br><li><b>Организация кода</b> - обычно имеются структуру и рекомендации по организации кода, способствующие поддерживаемости и расширяемости приложений.</li><br><li><b>Поддержка сообщества</b> - популярные фреймворки быстро формируют большие сообщества разработчиков, которые предлагают поддержку, обучение и ресурсы, что облегчает поиск решений для проблем и ускоряет процесс разработки.</li></ul></p></div>\", 1);\nconst _hoisted_2 = {\n  class: \"iblock_mini\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"max-width\": \"80px\",\n    \"max-height\": \"80px\"\n  }\n};\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache) {\n  const _component_PagetitleComponent = _resolveComponent(\"PagetitleComponent\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_PagetitleComponent, {\n    titleName: _ctx.areaName\n  }, null, 8 /* PROPS */, [\"titleName\"]), _createElementVNode(\"main\", null, [_hoisted_1, _createCommentVNode(\" <div class=\\\"iblock\\\">\\n        <div class=\\\"row\\\">\\n            <div v-for=\\\"item in JSFDATA\\\" class=\\\"col-4 col-xs-4 col-sm-4 col-md-4 col-lg-4\\\">\\n                <router-link :to=item.txtKey>{{item.title}}</router-link>\\n                <div style=\\\"max-width: 80px; max-height: 80px;\\\">\\n                    <img :src=\\\"getImgByKey(item.txtKey)\\\" alt=\\\"\\\" style=\\\"width: 100%;\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.JSFDATA, item => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_router_link, {\n      to: item.txtKey\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      src: _ctx.getImgByKey(item.txtKey),\n      alt: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_4)])]);\n  }), 256 /* UNKEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createStaticVNode","class","style","_createElementBlock","_Fragment","_createVNode","_component_PagetitleComponent","titleName","_ctx","areaName","_createElementVNode","_hoisted_1","_createCommentVNode","_renderList","JSFDATA","item","_hoisted_2","_component_router_link","to","txtKey","default","_withCtx","_createTextVNode","_toDisplayString","title","_","_hoisted_3","src","getImgByKey","alt","_hoisted_4"],"sources":["/home/kup/my_projects/vue/itdata/src/views/JsframeworksView/JsframeworksView.html"],"sourcesContent":["<PagetitleComponent :titleName=\"areaName\"/>\n<main>\n    <div class=\"iblock\">\n        <p><b>Фреймворк</b> - это некая программная платформа, определяющая структуру программной системы; ПО, облегчающее разработку и объединяющее различные компоненты большого программного проекта.</p>\n        <p>\n            В случае использования фреймворков в процессе разработки, можно сказать, что \"используется каркасный подход\" построения программ. В таком случае любая конфигурация программы строится из двух частей:\n            <ul>\n                <li><b>Постоянная часть</b> — каркас, не меняющийся от конфигурации к конфигурации и несущий в себе гнёзда, в которых размещается вторая, переменная часть;</li>\n                <li><b>Сменные модули</b> (или точки расширения).</li>\n            </ul>\n            Понятие \"фреймворк\" отличается от понятия \"библиотека\" тем, что последнее может быть использована в программном продукте просто как набор подпрограмм, не влияя на архитектуру в целом и не накладывая на неё никаких ограничений. В то время как фреймворк определяет правила архитектуры приложения, определяя на начальном этапе разработки «каркас», который нужно будет расширять и изменять согласно указанным требованиям. Также, в отличие от библиотеки, которая объединяет в себе набор близкой функциональности, — «фреймворк» может содержать в себе большое число разных по тематике библиотек.\n        </p>\n        <br>\n        <p><b>JavaScript-фреймворки</b> — это фреймворки для приложений, написанные на языке программирования JavaScript. JavaScript-фреймворки отличается от Javascript-библиотек потоком управления. Они являются неотъемлемой частью современной веб-разработки, предоставляя разработчикам проверенные и протестированные инструменты для создания масштабируемых и интерактивных веб-приложений. Многие современные компании используют фреймворки для своих решений, поэтому многие задачи связанные с разработкой клиентской части веб-приложений теперь требуют опыта работы с ними.</p>\n        <p>\n            Фреймворки JavaScript имеют ряд преимуществ, которые обеспечивают более эффективную и организованную разработку.\n            <ul>\n                <li><b>Ускорение разработки</b> - предоставляются готовые решения для общих задач (маршрутизация, управление состоянием и взаимодействие с сервером), что позволяет разработчику сосредоточиться на над своими индивидуальными задачами, не тратя время на реализацию базовых функций.</li>\n                <br>\n                <li><b>Организация кода</b> - обычно имеются структуру и рекомендации по организации кода, способствующие поддерживаемости и расширяемости приложений.</li>\n                <br>\n                <li><b>Поддержка сообщества</b> - популярные фреймворки быстро формируют большие сообщества разработчиков, которые предлагают поддержку, обучение и ресурсы, что облегчает поиск решений для проблем и ускоряет процесс разработки.</li>\n            </ul>\n        </p>        \n    </div>\n\n    <!-- <div class=\"iblock\">\n        <div class=\"row\">\n            <div v-for=\"item in JSFDATA\" class=\"col-4 col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n                <router-link :to=item.txtKey>{{item.title}}</router-link>\n                <div style=\"max-width: 80px; max-height: 80px;\">\n                    <img :src=\"getImgByKey(item.txtKey)\" alt=\"\" style=\"width: 100%;\">\n                </div>\n            </div>\n        </div>\n    </div> -->\n\n    <div v-for=\"item in JSFDATA\" class=\"iblock_mini\">\n        <router-link :to=item.txtKey>{{item.title}}</router-link>\n                <div style=\"max-width: 80px; max-height: 80px;\">\n                    <img :src=\"getImgByKey(item.txtKey)\" alt=\"\" style=\"width: 100%;\">\n                </div>\n    </div>\n</main>"],"mappings":";gCAAAA,kBAAA;;EAqCiCC,KAAK,EAAC;AAAa;;EAE/BC,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;mBAvC/D;;;;uBAAAC,mBAAA,CAAAC,SAAA,SAAAC,YAAA,CAA2CC,6BAAA;IAAtBC,SAAS,EAAEC,IAAA,CAAAC;EAAQ,wCACxCC,mBAAA,CA0CO,eAzCHC,UAsBM,EAENC,mBAAA,8cASU,G,kBAEVT,mBAAA,CAKMC,SAAA,QA1CVS,WAAA,CAqCwBL,IAAA,CAAAM,OAAO,EAAfC,IAAI;yBAAhBZ,mBAAA,CAKM,OALNa,UAKM,GAJFX,YAAA,CAAyDY,sBAAA;MAA3CC,EAAE,EAACH,IAAI,CAACI;;MAtC9BC,OAAA,EAAAC,QAAA,CAsCqC,MAAc,CAtCnDC,gBAAA,CAAAC,gBAAA,CAsCuCR,IAAI,CAACS,KAAK,iB;MAtCjDC,CAAA;iDAuCgBf,mBAAA,CAEM,OAFNgB,UAEM,GADFhB,mBAAA,CAAiE;MAA3DiB,GAAG,EAAEnB,IAAA,CAAAoB,WAAW,CAACb,IAAI,CAACI,MAAM;MAAGU,GAAG,EAAC,EAAE;MAAC3B,KAAoB,EAApB;QAAA;MAAA;4BAxChE4B,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}