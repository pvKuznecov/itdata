{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"iblock\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"iblock_title\"\n}, \"Создание инфоблока (API; PHP)\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"В данном уроке предлагается вариант функции, предназначенной для создания инфоблока, по средствам PHP кода.\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"code\"\n};\nconst _hoisted_5 = {\n  class: \"code_count\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Разберем, как это дело работает. Функция \\\"AddIBlock\\\" не требует никаких входящих параметров (этот момент можно менять на свое усмотрение). Результатом ее работы будет создание инфоблока \\\"Документы\\\" в типе инфоблока \\\"Универсальные списки\\\". \", -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_PagetitleComponent = _resolveComponent(\"PagetitleComponent\");\n  const _component_NavigatorComponent = _resolveComponent(\"NavigatorComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_PagetitleComponent, {\n    titleName: 'Заголовок'\n  }), _createElementVNode(\"main\", null, [_createVNode(_component_NavigatorComponent, {\n    navigatorsList: _ctx.AGDATA.navigator\n  }, null, 8 /* PROPS */, [\"navigatorsList\"]), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.exampCode[1][0].code, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", _hoisted_5, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])]), _hoisted_6], 512 /* NEED_PATCH */), [[_vShow, _ctx.$route.params.id == 0]]), _createCommentVNode(\" Bitrix: памятка по типам свойств инфоблока\\nДля пользовательских типов свойств нужно указывать еще и USER_TYPE.\\n\\nПривязка к элементам в виде списка:\\nPROPERTY_TYPE => 'E' \\nUSER_TYPE => 'EList' \\n\\nДата/Время:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'DateTime' \\n\\nПривязка к элементам по XML_ID:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'ElementXmlID' \\n\\nПривязка к файлу на сервере:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'FileMan' \\n\\nHTML/текст:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'HTML' \\n\\nПривязка к элементам с автозаполнением:\\nPROPERTY_TYPE => 'E' \\nUSER_TYPE => 'EAutocomplete' \\n\\nПривязка к товарам SKU:\\nPROPERTY_TYPE => 'E' \\nUSER_TYPE => 'SKU' \\n\\nСчетчик:\\nPROPERTY_TYPE => 'N' \\nUSER_TYPE => 'Sequence' \\n\\nПривязка к картам Google Maps:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'map_google' \\n\\nПривязка к Яндекс.Карте:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'map_yandex' \\n\\nВидео:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'video' \\n\\nПривязка к теме форума:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'TopicID' \\n\\nПривязка к пользователю:\\nPROPERTY_TYPE => 'S' \\nUSER_TYPE => 'UserID'\\n\\n\\\"PROPERTY_TYPE\\\" => \\\"S\\\", // Строка \")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_Fragment","_createVNode","_component_PagetitleComponent","titleName","_component_NavigatorComponent","navigatorsList","_ctx","AGDATA","navigator","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_renderList","exampCode","code","item","index","_hoisted_5","_toDisplayString","_hoisted_6","$route","params","id","_createCommentVNode"],"sources":["/home/kup/my_projects/vue/itdata/src/views_learning/LessonsBitrixView/LessonsBitrixView.html"],"sourcesContent":["<PagetitleComponent :titleName=\"'Заголовок'\"/>\n<main>\n    <NavigatorComponent :navigatorsList=\"AGDATA.navigator\" />\n\n    <div v-show=\"$route.params.id == 0\" class=\"iblock\">\n        <h2 class=\"iblock_title\">Создание инфоблока (API; PHP)</h2>\n        <p>В данном уроке предлагается вариант функции, предназначенной для создания инфоблока, по средствам PHP кода.</p>\n        <div class=\"code\">\n            <table>\n                <tr v-for=\"(item, index) in exampCode[1][0].code\">\n                    <td class=\"code_count\">{{index + 1}}</td>\n                    <td>{{item}}</td>\n                </tr>\n            </table>\n        </div>\n        <p>\n            Разберем, как это дело работает. Функция \"AddIBlock\" не требует никаких входящих параметров (этот момент можно менять на свое усмотрение). Результатом ее работы будет создание инфоблока \"Документы\" в типе инфоблока \"Универсальные списки\".\n        </p>\n    </div>\n\n\n<!-- Bitrix: памятка по типам свойств инфоблока\nДля пользовательских типов свойств нужно указывать еще и USER_TYPE.\n\nПривязка к элементам в виде списка:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'EList' \n\nДата/Время:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'DateTime' \n\nПривязка к элементам по XML_ID:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'ElementXmlID' \n\nПривязка к файлу на сервере:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'FileMan' \n\nHTML/текст:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'HTML' \n\nПривязка к элементам с автозаполнением:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'EAutocomplete' \n\nПривязка к товарам SKU:\nPROPERTY_TYPE => 'E' \nUSER_TYPE => 'SKU' \n\nСчетчик:\nPROPERTY_TYPE => 'N' \nUSER_TYPE => 'Sequence' \n\nПривязка к картам Google Maps:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'map_google' \n\nПривязка к Яндекс.Карте:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'map_yandex' \n\nВидео:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'video' \n\nПривязка к теме форума:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'TopicID' \n\nПривязка к пользователю:\nPROPERTY_TYPE => 'S' \nUSER_TYPE => 'UserID'\n\n\"PROPERTY_TYPE\" => \"S\", // Строка -->\n</main>"],"mappings":";;EAIwCA,KAAK,EAAC;AAAQ;gCAC9CC,mBAAA,CAA2D;EAAvDD,KAAK,EAAC;AAAc,GAAC,+BAA6B;gCACtDC,mBAAA,CAAkH,WAA/G,6GAA2G;;EACzGD,KAAK,EAAC;AAAM;;EAGDA,KAAK,EAAC;AAAY;gCAKlCC,mBAAA,CAEI,WAFD,wPAEH;;;;uBAjBRC,mBAAA,CAAAC,SAAA,SAAAC,YAAA,CAA8CC,6BAAA;IAAzBC,SAAS,EAAE;EAAW,IAC3CL,mBAAA,CA4EO,eA3EHG,YAAA,CAAyDG,6BAAA;IAApCC,cAAc,EAAEC,IAAA,CAAAC,MAAM,CAACC;+DAE5CV,mBAAA,CAcM,OAdNW,UAcM,GAbFC,UAA2D,EAC3DC,UAAkH,EAClHb,mBAAA,CAOM,OAPNc,UAOM,GANFd,mBAAA,CAKQ,iB,kBAJJC,mBAAA,CAGKC,SAAA,QAZrBa,WAAA,CAS4CP,IAAA,CAAAQ,SAAS,OAAOC,IAAI,EAThE,CAS4BC,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAGK,aAFDD,mBAAA,CAAyC,MAAzCoB,UAAyC,EAAAC,gBAAA,CAAhBF,KAAK,sBAC9BnB,mBAAA,CAAiB,YAAAqB,gBAAA,CAAXH,IAAI,iB;wCAItBI,UAEI,C,mCAbKd,IAAA,CAAAe,MAAM,CAACC,MAAM,CAACC,EAAE,O,GAiBjCC,mBAAA,6mCAuDqC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}